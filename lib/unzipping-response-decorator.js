// Generated by CoffeeScript 1.10.0
var EventEmitter, zlib,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

EventEmitter = require('events').EventEmitter;

zlib = require('zlib');

module.exports = (function(superClass) {
  extend(_Class, superClass);

  function _Class(res) {
    var gunzip;
    this.statusCode = res.statusCode;
    this.httpVersion = res.httpVersion;
    this.headers = res.headers;
    this.trailers = res.trailers;
    gunzip = zlib.createUnzip();
    res.on('data', function(data) {
      return gunzip.write(data);
    });
    res.on('end', function() {
      return gunzip.end();
    });
    res.on('close', (function(_this) {
      return function(err) {
        return _this.emit('close', err);
      };
    })(this));
    gunzip.on('data', (function(_this) {
      return function(data) {
        return _this.emit('data', data.toString());
      };
    })(this));
    gunzip.on('error', (function(_this) {
      return function(err) {
        return _this.emit('close', err);
      };
    })(this));
    gunzip.on('end', (function(_this) {
      return function() {
        return _this.emit('end');
      };
    })(this));
    this.res = res;
  }

  _Class.prototype.setEncoding = function(encoding) {
    return this.res.setEncoding(encoding);
  };

  _Class.prototype.pause = function() {
    return this.res.pause();
  };

  _Class.prototype.resume = function() {
    return this.res.resume();
  };

  return _Class;

})(EventEmitter);
